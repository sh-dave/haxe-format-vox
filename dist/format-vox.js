// Generated by Haxe 3.4.7
var $hx_exports = typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this;
(function ($global) { "use strict";
$hx_exports["format"] = $hx_exports["format"] || {};
$hx_exports["format"]["vox"] = $hx_exports["format"]["vox"] || {};
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var format_vox_VoxNodeTools = $hx_exports["format"]["vox"]["VoxNodeTools"] = function() { };
format_vox_VoxNodeTools.__name__ = true;
format_vox_VoxNodeTools.walkNodeGraph = function(vox,w) {
	w.beginGraph(vox);
	format_vox_VoxNodeTools.nodeWalker(vox.nodeGraph,w);
	w.endGraph();
};
format_vox_VoxNodeTools.nodeWalker = function(node,w) {
	if(node == null) {
		console.log("TODO (DK)");
	} else {
		switch(node[1]) {
		case 0:
			w.onTransform(node[5][0]);
			format_vox_VoxNodeTools.nodeWalker(node[6],w);
			break;
		case 1:
			var children = node[3];
			w.beginGroup(node[2]);
			var _g = 0;
			while(_g < children.length) {
				var child = children[_g];
				++_g;
				format_vox_VoxNodeTools.nodeWalker(child,w);
			}
			w.endGroup();
			break;
		case 2:
			w.onShape(node[2],node[3]);
			break;
		}
	}
	return;
};
var format_vox_VoxReader = $hx_exports["format"]["vox"]["VoxReader"] = function() { };
format_vox_VoxReader.__name__ = true;
format_vox_VoxReader.read = function(data,then) {
	if(data == null) {
		then(null,"Invalid input");
		return;
	}
	var input = new haxe_io_BytesInput(haxe_io_Bytes.ofData(data));
	if(input.readString(4) != "VOX ") {
		then(null,"Expected \"VOX \" header");
		return;
	}
	var version = input.readInt32();
	if(version != 150 && version != 200) {
		then(null,"Unsupported version \"" + version + "\"");
		return;
	}
	var vox = new format_vox_types_Vox();
	vox.palette = format_vox_VoxReader.get_DefaultPalette().map(format_vox_VoxTools.transformColor);
	var nodeData = [];
	format_vox_VoxReader.readChunk(input,vox,nodeData,{ modelIndex : 0, sizeIndex : 0});
	if(nodeData.length > 0) {
		vox.nodeGraph = format_vox_VoxReader.buildNodeGraph(vox,nodeData,0);
	}
	then(vox,null);
};
format_vox_VoxReader.readChunk = function(input,vox,nodeData,state) {
	var chunkId = input.readString(4);
	var contentSize = input.readInt32();
	var childBytes = input.readInt32();
	switch(chunkId) {
	case "MAIN":
		break;
	case "MATL":
		var m_id = input.readInt32();
		var _g = new haxe_ds_StringMap();
		var _g2 = 0;
		var _g1 = input.readInt32();
		while(_g2 < _g1) {
			++_g2;
			var key = input.read(input.readInt32()).toString();
			var value = input.read(input.readInt32()).toString();
			if(__map_reserved[key] != null) {
				_g.setReserved(key,value);
			} else {
				_g.h[key] = value;
			}
		}
		vox.materials[m_id] = _g;
		break;
	case "PACK":
		input.readInt32();
		break;
	case "RGBA":
		var palette = format_vox_VoxReader.get_DefaultPalette();
		var _g3 = 0;
		while(_g3 < 255) palette[_g3++ + 1] = input.readInt32();
		input.readInt32();
		vox.palette = palette.map(format_vox_VoxTools.transformColor);
		break;
	case "SIZE":
		vox.sizes[state.sizeIndex++] = new format_vox_types_Size(input.readInt32(),input.readInt32(),input.readInt32());
		break;
	case "XYZI":
		var vox1 = vox.models;
		var tmp = state.modelIndex++;
		var _g4 = [];
		var _g21 = 0;
		var _g11 = input.readInt32();
		while(_g21 < _g11) {
			++_g21;
			_g4.push(new format_vox_types_Voxel(input.readByte(),input.readByte(),input.readByte(),input.readByte()));
		}
		vox1[tmp] = _g4;
		break;
	case "nGRP":
		var nodeId = input.readInt32();
		var _g5 = new haxe_ds_StringMap();
		var _g22 = 0;
		var _g12 = input.readInt32();
		while(_g22 < _g12) {
			++_g22;
			var key1 = input.read(input.readInt32()).toString();
			var value1 = input.read(input.readInt32()).toString();
			if(__map_reserved[key1] != null) {
				_g5.setReserved(key1,value1);
			} else {
				_g5.h[key1] = value1;
			}
		}
		var numChildren = input.readInt32();
		var _g6 = [];
		var _g23 = 0;
		while(_g23 < numChildren) {
			++_g23;
			_g6.push(input.readInt32());
		}
		nodeData[nodeId] = format_vox__$VoxReader_NodeData.GroupNodeData(_g5,_g6);
		break;
	case "nSHP":
		var nodeId1 = input.readInt32();
		var _g7 = new haxe_ds_StringMap();
		var _g24 = 0;
		var _g13 = input.readInt32();
		while(_g24 < _g13) {
			++_g24;
			var key2 = input.read(input.readInt32()).toString();
			var value2 = input.read(input.readInt32()).toString();
			if(__map_reserved[key2] != null) {
				_g7.setReserved(key2,value2);
			} else {
				_g7.h[key2] = value2;
			}
		}
		var numModels = input.readInt32();
		var _g8 = [];
		var _g25 = 0;
		while(_g25 < numModels) {
			++_g25;
			var _g31 = input.readInt32();
			var _g9 = new haxe_ds_StringMap();
			var _g26 = 0;
			var _g14 = input.readInt32();
			while(_g26 < _g14) {
				++_g26;
				var key3 = input.read(input.readInt32()).toString();
				var value3 = input.read(input.readInt32()).toString();
				if(__map_reserved[key3] != null) {
					_g9.setReserved(key3,value3);
				} else {
					_g9.h[key3] = value3;
				}
			}
			_g8.push(new format_vox_types_Model(_g31,_g9));
		}
		nodeData[nodeId1] = format_vox__$VoxReader_NodeData.ShapeNodeData(_g7,_g8);
		break;
	case "nTRN":
		var nodeId2 = input.readInt32();
		var _g10 = new haxe_ds_StringMap();
		var _g27 = 0;
		var _g15 = input.readInt32();
		while(_g27 < _g15) {
			++_g27;
			var key4 = input.read(input.readInt32()).toString();
			var value4 = input.read(input.readInt32()).toString();
			if(__map_reserved[key4] != null) {
				_g10.setReserved(key4,value4);
			} else {
				_g10.h[key4] = value4;
			}
		}
		var childNodeId = input.readInt32();
		var reserved = input.readInt32();
		var layerId = input.readInt32();
		var numFrames = input.readInt32();
		var _g16 = [];
		var _g28 = 0;
		while(_g28 < numFrames) {
			++_g28;
			var _g17 = new haxe_ds_StringMap();
			var _g29 = 0;
			var _g18 = input.readInt32();
			while(_g29 < _g18) {
				++_g29;
				var key5 = input.read(input.readInt32()).toString();
				var value5 = input.read(input.readInt32()).toString();
				if(__map_reserved[key5] != null) {
					_g17.setReserved(key5,value5);
				} else {
					_g17.h[key5] = value5;
				}
			}
			_g16.push(_g17);
		}
		nodeData[nodeId2] = format_vox__$VoxReader_NodeData.TransformNodeData(_g10,childNodeId,reserved,layerId,_g16);
		break;
	default:
		input.read(contentSize);
	}
	var chunkSize = 12 + contentSize + childBytes;
	while(childBytes > 0) childBytes -= format_vox_VoxReader.readChunk(input,vox,nodeData,state);
	return chunkSize;
};
format_vox_VoxReader.buildNodeGraph = function(vox,nodeData,nodeId) {
	var n = nodeData[nodeId];
	switch(n[1]) {
	case 0:
		return format_vox_types_Node.Transform(n[2],n[4],n[5],n[6],format_vox_VoxReader.buildNodeGraph(vox,nodeData,n[3]));
	case 1:
		var children = n[3];
		var att = n[2];
		var _g = [];
		var _g1 = 0;
		while(_g1 < children.length) {
			var childId = children[_g1];
			++_g1;
			_g.push(format_vox_VoxReader.buildNodeGraph(vox,nodeData,childId));
		}
		return format_vox_types_Node.Group(att,_g);
	case 2:
		return format_vox_types_Node.Shape(n[2],n[3]);
	}
};
format_vox_VoxReader.readVoxel = function(input) {
	return new format_vox_types_Voxel(input.readByte(),input.readByte(),input.readByte(),input.readByte());
};
format_vox_VoxReader.readMaterial = function(input) {
	var tmp = input.readInt32();
	var _g = new haxe_ds_StringMap();
	var _g2 = 0;
	var _g1 = input.readInt32();
	while(_g2 < _g1) {
		++_g2;
		var key = input.read(input.readInt32()).toString();
		var value = input.read(input.readInt32()).toString();
		if(__map_reserved[key] != null) {
			_g.setReserved(key,value);
		} else {
			_g.h[key] = value;
		}
	}
	return { id : tmp, props : _g};
};
format_vox_VoxReader.readDict = function(input) {
	var _g = new haxe_ds_StringMap();
	var _g2 = 0;
	var _g1 = input.readInt32();
	while(_g2 < _g1) {
		++_g2;
		var key = input.read(input.readInt32()).toString();
		var value = input.read(input.readInt32()).toString();
		if(__map_reserved[key] != null) {
			_g.setReserved(key,value);
		} else {
			_g.h[key] = value;
		}
	}
	return _g;
};
format_vox_VoxReader.i32 = function(input) {
	return input.readInt32();
};
format_vox_VoxReader["byte"] = function(input) {
	return input.readByte();
};
format_vox_VoxReader.string = function(input) {
	return input.read(input.readInt32()).toString();
};
format_vox_VoxReader.get_DefaultPalette = function() {
	return [0,-1,-3342337,-6684673,-10027009,-13369345,-16711681,-13057,-3355393,-6697729,-10040065,-13382401,-16724737,-26113,-3368449,-6710785,-10053121,-13395457,-16737793,-39169,-3381505,-6723841,-10066177,-13408513,-16750849,-52225,-3394561,-6736897,-10079233,-13421569,-16763905,-65281,-3407617,-6749953,-10092289,-13434625,-16776961,-52,-3342388,-6684724,-10027060,-13369396,-16711732,-13108,-3355444,-6697780,-10040116,-13382452,-16724788,-26164,-3368500,-6710836,-10053172,-13395508,-16737844,-39220,-3381556,-6723892,-10066228,-13408564,-16750900,-52276,-3394612,-6736948,-10079284,-13421620,-16763956,-65332,-3407668,-6750004,-10092340,-13434676,-16777012,-103,-3342439,-6684775,-10027111,-13369447,-16711783,-13159,-3355495,-6697831,-10040167,-13382503,-16724839,-26215,-3368551,-6710887,-10053223,-13395559,-16737895,-39271,-3381607,-6723943,-10066279,-13408615,-16750951,-52327,-3394663,-6736999,-10079335,-13421671,-16764007,-65383,-3407719,-6750055,-10092391,-13434727,-16777063,-154,-3342490,-6684826,-10027162,-13369498,-16711834,-13210,-3355546,-6697882,-10040218,-13382554,-16724890,-26266,-3368602,-6710938,-10053274,-13395610,-16737946,-39322,-3381658,-6723994,-10066330,-13408666,-16751002,-52378,-3394714,-6737050,-10079386,-13421722,-16764058,-65434,-3407770,-6750106,-10092442,-13434778,-16777114,-205,-3342541,-6684877,-10027213,-13369549,-16711885,-13261,-3355597,-6697933,-10040269,-13382605,-16724941,-26317,-3368653,-6710989,-10053325,-13395661,-16737997,-39373,-3381709,-6724045,-10066381,-13408717,-16751053,-52429,-3394765,-6737101,-10079437,-13421773,-16764109,-65485,-3407821,-6750157,-10092493,-13434829,-16777165,-256,-3342592,-6684928,-10027264,-13369600,-16711936,-13312,-3355648,-6697984,-10040320,-13382656,-16724992,-26368,-3368704,-6711040,-10053376,-13395712,-16738048,-39424,-3381760,-6724096,-10066432,-13408768,-16751104,-52480,-3394816,-6737152,-10079488,-13421824,-16764160,-65536,-3407872,-6750208,-10092544,-13434880,-16776978,-16776995,-16777029,-16777046,-16777080,-16777097,-16777131,-16777148,-16777182,-16777199,-16716288,-16720640,-16729344,-16733696,-16742400,-16746752,-16755456,-16759808,-16768512,-16772864,-1179648,-2293760,-4521984,-5636096,-7864320,-8978432,-11206656,-12320768,-14548992,-15663104,-1118482,-2236963,-4473925,-5592406,-7829368,-8947849,-11184811,-12303292,-14540254,-15658735];
};
var format_vox__$VoxReader_NodeData = { __ename__ : true, __constructs__ : ["TransformNodeData","GroupNodeData","ShapeNodeData"] };
format_vox__$VoxReader_NodeData.TransformNodeData = function(attributes,childNodeId,reserved,layerId,frames) { var $x = ["TransformNodeData",0,attributes,childNodeId,reserved,layerId,frames]; $x.__enum__ = format_vox__$VoxReader_NodeData; $x.toString = $estr; return $x; };
format_vox__$VoxReader_NodeData.GroupNodeData = function(attributes,children) { var $x = ["GroupNodeData",1,attributes,children]; $x.__enum__ = format_vox__$VoxReader_NodeData; $x.toString = $estr; return $x; };
format_vox__$VoxReader_NodeData.ShapeNodeData = function(attributes,models) { var $x = ["ShapeNodeData",2,attributes,models]; $x.__enum__ = format_vox__$VoxReader_NodeData; $x.toString = $estr; return $x; };
var format_vox_VoxTools = $hx_exports["format"]["vox"]["VoxTools"] = function() { };
format_vox_VoxTools.__name__ = true;
format_vox_VoxTools.transformYZ = function(vox) {
	var _g1 = 0;
	var _g = vox.models.length;
	while(_g1 < _g) {
		var i = _g1++;
		var dy = vox.sizes[i].y;
		var _g2 = 0;
		var _g3 = vox.models[i];
		while(_g2 < _g3.length) {
			var v = _g3[_g2];
			++_g2;
			var y = v.y;
			v.y = v.z;
			v.z = dy - 1 - y;
		}
	}
};
format_vox_VoxTools.transformColor = function(color) {
	return new format_vox_types_Color(color & 255,color >> 8 & 255,color >> 16 & 255,color >> 24 & 255);
};
format_vox_VoxTools.dictHasTranslation = function(d) {
	return (__map_reserved["_t"] != null ? d.getReserved("_t") : d.h["_t"]) != null;
};
format_vox_VoxTools.getTranslationFromDict = function(d) {
	var t = __map_reserved["_t"] != null ? d.getReserved("_t") : d.h["_t"];
	if(t == null) {
		return { x : 0, y : 0, z : 0};
	}
	var split = t.split(" ");
	return { x : Std.parseInt(split[0]), y : Std.parseInt(split[1]), z : Std.parseInt(split[2])};
};
format_vox_VoxTools.dictHasRotation = function(d) {
	return (__map_reserved["_r"] != null ? d.getReserved("_r") : d.h["_r"]) != null;
};
format_vox_VoxTools.getRotationFromDict = function(d) {
	var r = __map_reserved["_r"] != null ? d.getReserved("_r") : d.h["_r"];
	if(r == null) {
		return { _00 : 1, _10 : 0, _20 : 0, _01 : 0, _11 : 1, _21 : 0, _02 : 0, _12 : 0, _22 : 1};
	}
	var value = Std.parseInt(r);
	var s0 = (value & 16) == 0 ? 1 : -1;
	var s1 = (value & 32) == 0 ? 1 : -1;
	var s2 = (value & 64) == 0 ? 1 : -1;
	var r0 = (value & 1) + (value & 2);
	var r1 = (value >> 2 & 1) + (value >> 2 & 2);
	var r2;
	switch(r0) {
	case 0:
		switch(r1) {
		case 1:
			r2 = 2;
			break;
		case 2:
			r2 = 1;
			break;
		default:
			console.log("missing r0;r1 match");
			r2 = 0;
		}
		break;
	case 1:
		switch(r1) {
		case 0:
			r2 = 2;
			break;
		case 2:
			r2 = 0;
			break;
		default:
			console.log("missing r0;r1 match");
			r2 = 0;
		}
		break;
	case 2:
		switch(r1) {
		case 0:
			r2 = 1;
			break;
		case 1:
			r2 = 0;
			break;
		default:
			console.log("missing r0;r1 match");
			r2 = 0;
		}
		break;
	default:
		console.log("missing r0;r1 match");
		r2 = 0;
	}
	return { _00 : r0 == 0 ? s0 : 0, _10 : r0 == 1 ? s0 : 0, _20 : r0 == 2 ? s0 : 0, _01 : r1 == 0 ? s1 : 0, _11 : r1 == 1 ? s1 : 0, _21 : r1 == 2 ? s1 : 0, _02 : r2 == 0 ? s2 : 0, _12 : r2 == 1 ? s2 : 0, _22 : r2 == 2 ? s2 : 0};
};
var format_vox_types_Color = function(r,g,b,a) {
	this.r = r;
	this.g = g;
	this.b = b;
	this.a = a;
};
format_vox_types_Color.__name__ = true;
format_vox_types_Color.prototype = {
	__class__: format_vox_types_Color
};
var format_vox_types_Model = function(modelId,attributes) {
	this.modelId = modelId;
	this.attributes = attributes;
};
format_vox_types_Model.__name__ = true;
format_vox_types_Model.prototype = {
	__class__: format_vox_types_Model
};
var format_vox_types_Node = { __ename__ : true, __constructs__ : ["Transform","Group","Shape"] };
format_vox_types_Node.Transform = function(attributes,reserved,layerId,frames,child) { var $x = ["Transform",0,attributes,reserved,layerId,frames,child]; $x.__enum__ = format_vox_types_Node; $x.toString = $estr; return $x; };
format_vox_types_Node.Group = function(attributes,children) { var $x = ["Group",1,attributes,children]; $x.__enum__ = format_vox_types_Node; $x.toString = $estr; return $x; };
format_vox_types_Node.Shape = function(attributes,models) { var $x = ["Shape",2,attributes,models]; $x.__enum__ = format_vox_types_Node; $x.toString = $estr; return $x; };
var format_vox_types_Size = function(x,y,z) {
	this.x = x;
	this.y = y;
	this.z = z;
};
format_vox_types_Size.__name__ = true;
format_vox_types_Size.prototype = {
	__class__: format_vox_types_Size
};
var format_vox_types_Vox = function() {
	this.materials = [];
	this.models = [];
	this.sizes = [];
};
format_vox_types_Vox.__name__ = true;
format_vox_types_Vox.prototype = {
	__class__: format_vox_types_Vox
};
var format_vox_types_Voxel = function(x,y,z,colorIndex) {
	this.x = x;
	this.y = y;
	this.z = z;
	this.colorIndex = colorIndex;
};
format_vox_types_Voxel.__name__ = true;
format_vox_types_Voxel.prototype = {
	__class__: format_vox_types_Voxel
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				s += fcc((c & 31) << 12 | (b[i++] & 127) << 6 | b[i++] & 127);
			} else {
				var u = (c & 15) << 18 | (b[i++] & 127) << 12 | (b[i++] & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Input = function() { };
haxe_io_Input.__name__ = true;
haxe_io_Input.prototype = {
	readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			if (eof instanceof js__$Boot_HaxeError) eof = eof.val;
			if( js_Boot.__instanceof(eof,haxe_io_Eof) ) {
			} else throw(eof);
		}
		return len - k;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.toString();
	}
	,__class__: haxe_io_Input
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
haxe_io_BytesInput.__name__ = true;
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
});
var haxe_io_Eof = function() {
};
haxe_io_Eof.__name__ = true;
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) this.a[_g1++] = 0;
		this.byteLength = len;
	}
};
js_html_compat_ArrayBuffer.__name__ = true;
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	new Uint8Array(result).set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_Uint8Array = function() { };
js_html_compat_Uint8Array.__name__ = true;
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {};
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
format_vox_VoxTools.TranslationKey = "_t";
format_vox_VoxTools.RotationKey = "_r";
js_Boot.__toStr = ({ }).toString;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
var format = $hx_exports["format"];
